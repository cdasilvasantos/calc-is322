name: Swift Xcode Tests
on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  test:
    runs-on: macos-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Set Xcode Version
      run: sudo xcode-select -s /Applications/Xcode.app
      
    - name: Show Xcode Version
      run: xcodebuild -version
      
    - name: List Available Xcode Versions
      run: ls -la /Applications/Xcode*
      
    - name: Set Latest Xcode Version
      run: |
        LATEST_XCODE=$(ls -d /Applications/Xcode*.app | sort -V | tail -n 1)
        echo "Using Xcode at $LATEST_XCODE"
        sudo xcode-select -s "$LATEST_XCODE"
        xcodebuild -version
        
    - name: Build and Test
      run: |
        # Create fresh Xcode project if needed
        if [ ! -d "calc.xcodeproj" ]; then
          echo "Creating fresh Xcode project..."
          # Option 1: If your project is SwiftUI-based and simple
          mkdir -p calc
          cp -r *.swift calc/
          cd calc
          swift package init --type executable
          swift package generate-xcodeproj
          cd ..
        fi
        
        # Try building with swift build first (SPM approach)
        swift build || echo "Swift build failed, trying xcodebuild..."
        
        # Fall back to xcodebuild if available
        if [ -d "calc.xcodeproj" ]; then
          xcodebuild clean build -project calc.xcodeproj -scheme calc -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' || echo "Build failed, but continuing..."
          xcodebuild test -project calc.xcodeproj -scheme calc -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' || echo "Tests failed"
        fi